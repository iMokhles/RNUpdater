/* Card component styles */

.card {
  border-radius: var(--radius-lg);
  border: 1px solid hsl(var(--border));
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
  box-shadow: var(--shadow-sm);
  transition: all var(--transition-normal);
}

.card:hover {
  box-shadow: var(--shadow-md);
}

.cardHeader {
  display: flex;
  flex-direction: column;
  space-y: 1.5rem;
  padding: var(--space-6);
}

.cardTitle {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-semibold);
  line-height: var(--line-height-tight);
  letter-spacing: -0.025em;
  color: hsl(var(--card-foreground));
}

.cardDescription {
  font-size: var(--font-size-sm);
  color: hsl(var(--muted-foreground));
  line-height: var(--line-height-normal);
}

.cardContent {
  padding: var(--space-6);
  padding-top: 0;
}

.cardFooter {
  display: flex;
  align-items: center;
  padding: var(--space-6);
  padding-top: 0;
}

/* Card variants */
.cardInteractive {
  cursor: pointer;
  transition: all var(--transition-normal);
}

.cardInteractive:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.cardInteractive:active {
  transform: translateY(0);
  box-shadow: var(--shadow-md);
}

.cardBordered {
  border-width: 2px;
}

.cardFlat {
  box-shadow: none;
  border: 1px solid var(--border);
}

.cardElevated {
  box-shadow: var(--shadow-lg);
}

.cardElevated:hover {
  box-shadow: var(--shadow-xl);
}

/* Card with different padding sizes */
.cardPaddingSm .cardHeader,
.cardPaddingSm .cardContent,
.cardPaddingSm .cardFooter {
  padding: var(--space-4);
}

.cardPaddingSm .cardContent {
  padding-top: 0;
}

.cardPaddingSm .cardFooter {
  padding-top: 0;
}

.cardPaddingLg .cardHeader,
.cardPaddingLg .cardContent,
.cardPaddingLg .cardFooter {
  padding: var(--space-8);
}

.cardPaddingLg .cardContent {
  padding-top: 0;
}

.cardPaddingLg .cardFooter {
  padding-top: 0;
}

/* Card with no padding */
.cardNoPadding .cardHeader,
.cardNoPadding .cardContent,
.cardNoPadding .cardFooter {
  padding: 0;
}

/* Card with custom spacing */
.cardSpaceY2 > * + * {
  margin-top: var(--space-2);
}

.cardSpaceY4 > * + * {
  margin-top: var(--space-4);
}

.cardSpaceY6 > * + * {
  margin-top: var(--space-6);
}

/* Card header with actions */
.cardHeaderWithActions {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: var(--space-4);
}

.cardHeaderContent {
  flex: 1;
  min-width: 0;
}

.cardHeaderActions {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  flex-shrink: 0;
}

/* Card with divider */
.cardWithDivider .cardContent {
  border-top: 1px solid var(--border);
  margin-top: var(--space-6);
  padding-top: var(--space-6);
}

/* Card loading state */
.cardLoading {
  position: relative;
  overflow: hidden;
}

.cardLoading::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.1),
    transparent
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* Card error state */
.cardError {
  border-color: var(--destructive);
  background-color: rgba(var(--destructive), 0.05);
}

.cardError .cardTitle {
  color: var(--destructive);
}

/* Card success state */
.cardSuccess {
  border-color: var(--success);
  background-color: rgba(var(--success), 0.05);
}

.cardSuccess .cardTitle {
  color: var(--success);
}

/* Card warning state */
.cardWarning {
  border-color: var(--warning);
  background-color: rgba(var(--warning), 0.05);
}

.cardWarning .cardTitle {
  color: var(--warning);
}

/* Responsive card */
@media (max-width: 768px) {
  .cardHeader,
  .cardContent,
  .cardFooter {
    padding: var(--space-4);
  }

  .cardContent {
    padding-top: 0;
  }

  .cardFooter {
    padding-top: 0;
  }
}
